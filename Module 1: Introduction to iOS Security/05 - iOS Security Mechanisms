- Initially, most security mechanisms were shrouded in mystery
- Apple recently published the detailed explanations of the initial security details.
- Apple gave a talk at Blackhat in 2012

Security Architecture Layout
 - Software
   - Data protection class
   - app sandbox
   - user partition
   - OS partition
   - Encrypted file system
   
   - Kernel
   
 - Hardware and Firmware
   - Crypto Engine
   
   - Device key
   - Group Key
   - Apple Root Certificate
   
Security Architecture Strategy
 - Layered in a way that makes it difficult to break in
 - Encryption starts in hardware, extends into OS and file system, and then applications
 - Data protection with encryption
 - Code and application signing
 
Secure Boot Chain
 - To get around rootkits, Apple came up with secure boot chain
 - Boot ROM: Engraved inside hardware, readonly piece of memory, cant be changed, contains Apple root, verifies the sig of first stage boot loader (LLB)
 - LLB: Low level bootloader, verified to be one sent by apple, Boots the second stage boot loader (iBoot), verifies if the iBoot has been signed by Apple
 - iBoot: Second stage bootloader, boots up the iOS kernel, verifies that kernel has been signed by Apple
 - Boot ROM -> LLB -> iBoot -> iOS Kernel
 
iOS Kernel
 - Loads up the OS components, system processes, and applications (those distributed by apple and third party that you rpeviously downloaded)
 - Again, Kernel verifies applications are signed by apple.
 
Applications
 - Applications are signed by apple in what is called code signing
 - Whenever a dev wants his code to be used, he submits the app to apple to be verified
 - Apple doesn't make the app auditing process publicly available
 - Apple does not do a very thorough job at analyzing these (according to this guy)
 - This makes it so that users need to buy their applications from the app store.
 
Application Isolation
 - Sandboxes
 - App1 cant access data of app2.
 - Runtime injection is not allowed/possible
 - All applications run under the user: MOBILE
 - All system processes run under user: ROOT
 
Data Encryption
 - All encryption is sped up by good crypto hardware
 - Hardware crypto
   - Most encryption revolves around UID key which is unique to every device.
   - During manufactruing, the UID is embedded into the silicon.
   - Not apple nor its manufacturers know that key.
   - GID key - GID key is specific to type of hardware.
   - UID will be different for every device.
 - Data and File Encryption
   - Keychain - secure storage for apps
   - Keybags - how keys are stored
   - File based encryption
   
Built-in Support for
 - secure data delivery over a network.
 - SSL, TLS, VPN, Wifi, Bluetooth
 
Essentially, Pentesting iOS is hard... but with jailbreaking...
